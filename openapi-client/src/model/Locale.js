/**
 * Wise-r API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.WiserClient) {
      root.WiserClient = {};
    }
    root.WiserClient.Locale = factory(root.WiserClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Locale model module.
   * @module model/Locale
   * @version 2.0
   */

  /**
   * Constructs a new <code>Locale</code>.
   * @alias module:model/Locale
   * @class
   */
  var exports = function() {
    var _this = this;















  };

  /**
   * Constructs a <code>Locale</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Locale} obj Optional instance to populate.
   * @return {module:model/Locale} The populated <code>Locale</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('script')) {
        obj['script'] = ApiClient.convertToType(data['script'], 'String');
      }
      if (data.hasOwnProperty('country')) {
        obj['country'] = ApiClient.convertToType(data['country'], 'String');
      }
      if (data.hasOwnProperty('variant')) {
        obj['variant'] = ApiClient.convertToType(data['variant'], 'String');
      }
      if (data.hasOwnProperty('extensionKeys')) {
        obj['extensionKeys'] = ApiClient.convertToType(data['extensionKeys'], ['String']);
      }
      if (data.hasOwnProperty('unicodeLocaleAttributes')) {
        obj['unicodeLocaleAttributes'] = ApiClient.convertToType(data['unicodeLocaleAttributes'], ['String']);
      }
      if (data.hasOwnProperty('unicodeLocaleKeys')) {
        obj['unicodeLocaleKeys'] = ApiClient.convertToType(data['unicodeLocaleKeys'], ['String']);
      }
      if (data.hasOwnProperty('iso3Language')) {
        obj['iso3Language'] = ApiClient.convertToType(data['iso3Language'], 'String');
      }
      if (data.hasOwnProperty('iso3Country')) {
        obj['iso3Country'] = ApiClient.convertToType(data['iso3Country'], 'String');
      }
      if (data.hasOwnProperty('displayLanguage')) {
        obj['displayLanguage'] = ApiClient.convertToType(data['displayLanguage'], 'String');
      }
      if (data.hasOwnProperty('displayScript')) {
        obj['displayScript'] = ApiClient.convertToType(data['displayScript'], 'String');
      }
      if (data.hasOwnProperty('displayCountry')) {
        obj['displayCountry'] = ApiClient.convertToType(data['displayCountry'], 'String');
      }
      if (data.hasOwnProperty('displayVariant')) {
        obj['displayVariant'] = ApiClient.convertToType(data['displayVariant'], 'String');
      }
      if (data.hasOwnProperty('displayName')) {
        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
      }
      if (data.hasOwnProperty('language')) {
        obj['language'] = ApiClient.convertToType(data['language'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} script
   */
  exports.prototype['script'] = undefined;
  /**
   * @member {String} country
   */
  exports.prototype['country'] = undefined;
  /**
   * @member {String} variant
   */
  exports.prototype['variant'] = undefined;
  /**
   * @member {Array.<String>} extensionKeys
   */
  exports.prototype['extensionKeys'] = undefined;
  /**
   * @member {Array.<String>} unicodeLocaleAttributes
   */
  exports.prototype['unicodeLocaleAttributes'] = undefined;
  /**
   * @member {Array.<String>} unicodeLocaleKeys
   */
  exports.prototype['unicodeLocaleKeys'] = undefined;
  /**
   * @member {String} iso3Language
   */
  exports.prototype['iso3Language'] = undefined;
  /**
   * @member {String} iso3Country
   */
  exports.prototype['iso3Country'] = undefined;
  /**
   * @member {String} displayLanguage
   */
  exports.prototype['displayLanguage'] = undefined;
  /**
   * @member {String} displayScript
   */
  exports.prototype['displayScript'] = undefined;
  /**
   * @member {String} displayCountry
   */
  exports.prototype['displayCountry'] = undefined;
  /**
   * @member {String} displayVariant
   */
  exports.prototype['displayVariant'] = undefined;
  /**
   * @member {String} displayName
   */
  exports.prototype['displayName'] = undefined;
  /**
   * @member {String} language
   */
  exports.prototype['language'] = undefined;



  return exports;
}));


