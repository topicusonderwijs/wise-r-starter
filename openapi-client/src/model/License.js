/**
 * Wise-r API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.WiserClient) {
      root.WiserClient = {};
    }
    root.WiserClient.License = factory(root.WiserClient.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The License model module.
   * @module model/License
   * @version 2.0
   */

  /**
   * Constructs a new <code>License</code>.
   * @alias module:model/License
   * @class
   * @param schoolId {String} Parent school of the school location.
   */
  var exports = function(schoolId) {
    var _this = this;

    _this['schoolId'] = schoolId;









  };

  /**
   * Constructs a <code>License</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/License} obj Optional instance to populate.
   * @return {module:model/License} The populated <code>License</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('schoolId')) {
        obj['schoolId'] = ApiClient.convertToType(data['schoolId'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('startDate')) {
        obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
      }
      if (data.hasOwnProperty('endDate')) {
        obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
      }
      if (data.hasOwnProperty('application')) {
        obj['application'] = ApiClient.convertToType(data['application'], 'String');
      }
      if (data.hasOwnProperty('teacherId')) {
        obj['teacherId'] = ApiClient.convertToType(data['teacherId'], 'String');
      }
      if (data.hasOwnProperty('schoolLocationId')) {
        obj['schoolLocationId'] = ApiClient.convertToType(data['schoolLocationId'], 'String');
      }
      if (data.hasOwnProperty('group')) {
        obj['group'] = ApiClient.convertToType(data['group'], 'String');
      }
      if (data.hasOwnProperty('licenseType')) {
        obj['licenseType'] = ApiClient.convertToType(data['licenseType'], 'String');
      }
      if (data.hasOwnProperty('licenseStatus')) {
        obj['licenseStatus'] = ApiClient.convertToType(data['licenseStatus'], 'String');
      }
    }
    return obj;
  }

  /**
   * Parent school of the school location.
   * @member {String} schoolId
   */
  exports.prototype['schoolId'] = undefined;
  /**
   * The ID of license. For creation this value should be left empty, for updating it is a required field
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * format: yyyy-MM-dd
   * @member {Date} startDate
   */
  exports.prototype['startDate'] = undefined;
  /**
   * format: yyyy-MM-dd
   * @member {Date} endDate
   */
  exports.prototype['endDate'] = undefined;
  /**
   * @member {String} application
   */
  exports.prototype['application'] = undefined;
  /**
   * @member {String} teacherId
   */
  exports.prototype['teacherId'] = undefined;
  /**
   * @member {String} schoolLocationId
   */
  exports.prototype['schoolLocationId'] = undefined;
  /**
   * @member {String} group
   */
  exports.prototype['group'] = undefined;
  /**
   * @member {module:model/License.LicenseTypeEnum} licenseType
   */
  exports.prototype['licenseType'] = undefined;
  /**
   * @member {module:model/License.LicenseStatusEnum} licenseStatus
   */
  exports.prototype['licenseStatus'] = undefined;


  /**
   * Allowed values for the <code>licenseType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.LicenseTypeEnum = {
    /**
     * value: "TRIAL"
     * @const
     */
    "TRIAL": "TRIAL",
    /**
     * value: "FULL"
     * @const
     */
    "FULL": "FULL",
    /**
     * value: "FREE"
     * @const
     */
    "FREE": "FREE",
    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",
    /**
     * value: "LIMITED"
     * @const
     */
    "LIMITED": "LIMITED"  };

  /**
   * Allowed values for the <code>licenseStatus</code> property.
   * @enum {String}
   * @readonly
   */
  exports.LicenseStatusEnum = {
    /**
     * value: "LATEST"
     * @const
     */
    "LATEST": "LATEST",
    /**
     * value: "DEPRECATED"
     * @const
     */
    "DEPRECATED": "DEPRECATED"  };


  return exports;
}));


