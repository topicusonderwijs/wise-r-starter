/**
 * Wise-r API
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/RestResourceLinkV2'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./RestResourceLinkV2'));
  } else {
    // Browser globals (root is window)
    if (!root.WiserClient) {
      root.WiserClient = {};
    }
    root.WiserClient.UserResourceV2 = factory(root.WiserClient.ApiClient, root.WiserClient.RestResourceLinkV2);
  }
}(this, function(ApiClient, RestResourceLinkV2) {
  'use strict';




  /**
   * The UserResourceV2 model module.
   * @module model/UserResourceV2
   * @version 2.0
   */

  /**
   * Constructs a new <code>UserResourceV2</code>.
   * @alias module:model/UserResourceV2
   * @class
   * @param id {String} The ID of this resource
   */
  var exports = function(id) {
    var _this = this;

    _this['id'] = id;













  };

  /**
   * Constructs a <code>UserResourceV2</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserResourceV2} obj Optional instance to populate.
   * @return {module:model/UserResourceV2} The populated <code>UserResourceV2</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('initials')) {
        obj['initials'] = ApiClient.convertToType(data['initials'], 'String');
      }
      if (data.hasOwnProperty('firstName')) {
        obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
      }
      if (data.hasOwnProperty('surname')) {
        obj['surname'] = ApiClient.convertToType(data['surname'], 'String');
      }
      if (data.hasOwnProperty('prefix')) {
        obj['prefix'] = ApiClient.convertToType(data['prefix'], 'String');
      }
      if (data.hasOwnProperty('birthDate')) {
        obj['birthDate'] = ApiClient.convertToType(data['birthDate'], 'String');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('userType')) {
        obj['userType'] = ApiClient.convertToType(data['userType'], 'String');
      }
      if (data.hasOwnProperty('grade')) {
        obj['grade'] = ApiClient.convertToType(data['grade'], 'String');
      }
      if (data.hasOwnProperty('gender')) {
        obj['gender'] = ApiClient.convertToType(data['gender'], 'String');
      }
      if (data.hasOwnProperty('sector')) {
        obj['sector'] = ApiClient.convertToType(data['sector'], 'String');
      }
      if (data.hasOwnProperty('linkedSchoolLocations')) {
        obj['linkedSchoolLocations'] = ApiClient.convertToType(data['linkedSchoolLocations'], [RestResourceLinkV2]);
      }
      if (data.hasOwnProperty('linkedGroups')) {
        obj['linkedGroups'] = ApiClient.convertToType(data['linkedGroups'], [RestResourceLinkV2]);
      }
      if (data.hasOwnProperty('urlToKey')) {
        obj['urlToKey'] = ApiClient.convertToType(data['urlToKey'], 'String');
      }
    }
    return obj;
  }

  /**
   * The ID of this resource
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Initials
   * @member {String} initials
   */
  exports.prototype['initials'] = undefined;
  /**
   * First name
   * @member {String} firstName
   */
  exports.prototype['firstName'] = undefined;
  /**
   * Surname
   * @member {String} surname
   */
  exports.prototype['surname'] = undefined;
  /**
   * Name prefix. Sometimes the prefix is part of the surname, depending on the conventions of the source system.
   * @member {String} prefix
   */
  exports.prototype['prefix'] = undefined;
  /**
   * Birth date
   * @member {String} birthDate
   */
  exports.prototype['birthDate'] = undefined;
  /**
   * Email address
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * Type of user
   * @member {module:model/UserResourceV2.UserTypeEnum} userType
   */
  exports.prototype['userType'] = undefined;
  /**
   * Grade (only applicable for students)
   * @member {String} grade
   */
  exports.prototype['grade'] = undefined;
  /**
   * Gender
   * @member {module:model/UserResourceV2.GenderEnum} gender
   */
  exports.prototype['gender'] = undefined;
  /**
   * Education sector for this user (Dutch abbreviation)
   * @member {String} sector
   */
  exports.prototype['sector'] = undefined;
  /**
   * List of linked schoolLocationId's of the current user. 
   * @member {Array.<module:model/RestResourceLinkV2>} linkedSchoolLocations
   */
  exports.prototype['linkedSchoolLocations'] = undefined;
  /**
   * List of id's of groups that this user belongs to.
   * @member {Array.<module:model/RestResourceLinkV2>} linkedGroups
   */
  exports.prototype['linkedGroups'] = undefined;
  /**
   * @member {String} urlToKey
   */
  exports.prototype['urlToKey'] = undefined;


  /**
   * Allowed values for the <code>userType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.UserTypeEnum = {
    /**
     * value: "student"
     * @const
     */
    "student": "student",
    /**
     * value: "teacher"
     * @const
     */
    "teacher": "teacher"  };

  /**
   * Allowed values for the <code>gender</code> property.
   * @enum {String}
   * @readonly
   */
  exports.GenderEnum = {
    /**
     * value: "male"
     * @const
     */
    "male": "male",
    /**
     * value: "female"
     * @const
     */
    "female": "female",
    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown"  };


  return exports;
}));


